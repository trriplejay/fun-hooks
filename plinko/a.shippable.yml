mainTemplate: &mainTemplate
  - if [ $JOB_TRIGGERED_BY_NAME == "reset" ]; then echo "resetting job to failed state"; return 1; fi

successTemplate: &successTemplate
  - result=$(($RANDOM % 2))
  - randomOut=${outs[$result]}
  - echo "randomly bouncing to $randomOut"
  - shipctl put_resource_state $randomOut response_url "$response_url"
  - shipctl put_resource_state $randomOut user "$user"


#### row A, the first row
jobs:
  - name: A1
    type: runSh
    flags:
      - plinko
    dependencyMode: immediate
    runtime:
        nodePool: u14-dyna
    steps:
      - IN: A1Trig
      - IN: reset
      - TASK:
          script:
            - *mainTemplate
      - OUT: B1Trig

    on_success:
      script:
        - outs=("B1Trig" "B1Trig")
        - *successTemplate

  - name: A2
    type: runSh
    flags:
      - plinko
    dependencyMode: immediate
    runtime:
        nodePool: u14-dyna
    steps:
      - IN: A2Trig
      - IN: reset
      - TASK:
          script:
            - *mainTemplate
      - OUT: B1Trig
      - OUT: B2Trig
    on_success:
      script:
        - outs=("B1Trig" "B2Trig")
        - *successTemplate

  - name: A3
    type: runSh
    flags:
      - plinko
    dependencyMode: immediate
    runtime:
        nodePool: u14-dyna
    steps:
      - IN: A3Trig
      - IN: reset
      - TASK:
          script:
            - *mainTemplate
      - OUT: B2Trig
      - OUT: B3Trig
    on_success:
      script:
        - outs=("B2Trig" "B3Trig")
        - *successTemplate

  - name: A4
    type: runSh
    flags:
      - plinko
    dependencyMode: immediate
    runtime:
        nodePool: u14-dyna
    steps:
      - IN: A4Trig
      - IN: reset
      - TASK:
          script:
            - *mainTemplate
      - OUT: B3Trig
      - OUT: B4Trig
    on_success:
      script:
        - outs=("B3Trig" "B4Trig")
        - *successTemplate

  - name: A5
    type: runSh
    flags:
      - plinko
    dependencyMode: immediate
    runtime:
        nodePool: u14-dyna
    steps:
      - IN: A5Trig
      - IN: reset
      - TASK:
          script:
            - *mainTemplate
      - OUT: B4Trig
      - OUT: B5Trig
    on_success:
      script:
        - outs=("B4Trig" "B5Trig")
        - *successTemplate

  - name: A6
    type: runSh
    flags:
      - plinko
    dependencyMode: immediate
    runtime:
        nodePool: u14-dyna
    steps:
      - IN: A6Trig
      - IN: reset
      - TASK:
          script:
            - *mainTemplate
      - OUT: B5Trig
      - OUT: B6Trig
    on_success:
      script:
        - outs=("B5Trig" "B6Trig")
        - *successTemplate

  - name: A7
    type: runSh
    flags:
      - plinko
    dependencyMode: immediate
    runtime:
        nodePool: u14-dyna
    steps:
      - IN: A7Trig
      - IN: reset
      - TASK:
          script:
            - *mainTemplate
      - OUT: B6Trig
      - OUT: B7Trig
    on_success:
      script:
        - outs=("B6Trig" "B7Trig")
        - *successTemplate

  - name: A8
    type: runSh
    flags:
      - plinko
    dependencyMode: immediate
    runtime:
        nodePool: u14-dyna
    steps:
      - IN: A8Trig
      - IN: reset
      - TASK:
          script:
            - *mainTemplate
      - OUT: B7Trig
      - OUT: B8Trig

    on_success:
      script:
        - outs=("B7Trig" "B8Trig")
        - *successTemplate

  - name: A9
    type: runSh
    flags:
      - plinko
    dependencyMode: immediate
    runtime:
        nodePool: u14-dyna
    steps:
      - IN: A9Trig
      - IN: reset
      - TASK:
          script:
            - *mainTemplate
      - OUT: B8Trig
    on_success:
      script:
        - outs=("B8Trig" "B8Trig")
        - *successTemplate


#### triggering IN resources
resources:
  - name: A1Trig
    type: params
    versionTemplate:
      params:
        name: A1Trig

  - name: A2Trig
    type: params
    versionTemplate:
      params:
        name: A2Trig

  - name: A3Trig
    type: params
    versionTemplate:
      params:
        name: A3Trig

  - name: A4Trig
    type: params
    versionTemplate:
      params:
        name: A4Trig

  - name: A5Trig
    type: params
    versionTemplate:
      params:
        name: A5Trig

  - name: A6Trig
    type: params
    versionTemplate:
      params:
        name: A6Trig

  - name: A7Trig
    type: params
    versionTemplate:
      params:
        name: A7Trig

  - name: A8Trig
    type: params
    versionTemplate:
      params:
        name: A8Trig

  - name: A9Trig
    type: params
    versionTemplate:
      params:
        name: A9Trig