resources:

############################################
# The basics. used in all jobs.
############################################
  - name: hook-repo
    type: gitRepo
    integration: github
    versionTemplate:
      sourceName: trriplejay/fun-hooks
      branch: master

##############################################
# The hooks. one per job.
##############################################
  - name: ermahgerd
    type: webhook
    versionTemplate:
      webhookKey: tCv4fhCogSqmyjmRgvuR

  - name: pirate
    type: webhook
    versionTemplate:
      webhookKey: tCv4fhCogSqmyjmRgvuR

  - name: warmup
    type: webhook
    versionTemplate:
      webhookKey: hAlQjJboj5ZALQENheQN


jobs:
  - name: execute-warmup
    type: runSh
    steps:
      - IN: warmup
      - IN: hook-repo
        switch: off
      - TASK:
          script:
            - sudo apt-get install libssl-dev
            - pushd $(shipctl get_resource_state hook-repo)
            - HOOK_META=$(shipctl get_resource_meta warmup)
            - export response_url=$(shipctl get_json_value "$HOOK_META/version.json" "version.propertyBag.payload.response_url")
            - sh translate/respond.sh "engines online..."
    on_success:
      script:
        - echo "machine is warm"
    on_failure:
      script:
        - echo "something went wrong!"


  - name: execute-translate
    type: runSh
    steps:
      - IN: hook-repo
        switch: off
      - IN: ermahgerd
      - IN: pirate
      - TASK:
          script:
            - echo "translating..."
            - pushd $(shipctl get_resource_state hook-repo)
            - HOOK_META=$(shipctl get_resource_meta $JOB_TRIGGERED_BY_NAME)
            - export response_url=$(shipctl get_json_value "$HOOK_META/version.json" "version.propertyBag.payload.response_url")
            - export message=$(shipctl get_json_value "$HOOK_META/version.json" "version.propertyBag.payload.text")
            - export user=$(shipctl get_json_value "$HOOK_META/version.json" "version.propertyBag.payload.user_name")
            - echo "$JOB_TRIGGERED_BY_NAME"
            - result=$(sh translate/translate.sh)
            - echo "translation-> $result"
            - sh translate/respond.sh "$user says $result"
